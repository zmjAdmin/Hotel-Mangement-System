##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Service"))
#set($pageEntityPackage = $tool.append($!{tableInfo.savePackageName}, ".common.utils.web"))
#set($pageNumName = "page")
#set($pageSizeName = "pageSize")
#set($pageEntity = "PageEntity")
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/service"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end
#set($IdArr = $tool.append($!pk.shortType, "[]"))
#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;

import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import $!{pageEntityPackage}.PageEntity;
import org.springframework.transaction.annotation.Transactional;
import java.util.List;

/**
 * $!{tableInfo.comment}($!{tableInfo.name})表服务接口
 *
 * @author $!author
 * @since $!time.currTime()
 */
@Transactional
public interface $!{tableName} {

        /**
         * 分页查询
         *
         * @param $!{tool.firstLowerCase($tableInfo.name)} 筛选条件
         * @param $pageNumName 当前页
         * @param $pageSizeName 每页的条数
         * @return 查询结果
         */
        public $pageEntity<$!{tableInfo.name}> queryByPage($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}), Integer $pageNumName, Integer $pageSizeName);

        /**
         * 通过主键查询单条数据
         *
         * @param id 主键
         * @return 单条数据
         */
        public $!{tableInfo.name} queryById($!pk.shortType id);

        /**
         * 插入一条数据
         *
         * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象
         * @return 受影响行数
         */
        public Integer insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));

        /**
         * 批量插入数据
         *
         * @param $!tool.firstLowerCase($!{tableInfo.name})List 实体列表
         * @return 受影响行数
         */
        public Integer batchInsert(List<$!{tableInfo.name}> $!tool.firstLowerCase($!{tableInfo.name})List);

        /**
         * 通过主键修改数据
         *
         * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象
         * @return 受影响行数
         */
        public Integer update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));

        /**
         * 通过主键删除数据
         *
         * @param id 主键
         * @return 受影响行数
         */
        public Integer deleteById($!pk.shortType id);

        /**
        * 通过主键批量删除数据
        *
        * @param ids 主键数组
        * @return 受影响行数
        */
        public Integer batchDelete($!IdArr ids);

}